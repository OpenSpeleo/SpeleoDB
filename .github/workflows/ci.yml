name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: ["master", "main", "dev"]
    paths-ignore: ["docs/**"]

  push:
    branches: ["master", "main", "dev", "type-checking"]
    paths-ignore: ["docs/**"]

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      # Consider using pre-commit.ci for open source project
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  # With no caching at all the entire ci process takes 3m to complete!
  pytest:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:6
        ports:
          - 6379:6379
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres

    env:
      CELERY_BROKER_URL: "redis://localhost:6379/0"
      # postgres://user:password@host:port/database
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"

    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          python-version: "3.13"
          activate-environment: true

      - name: Install Dependencies
        run: uv sync --extra local --frozen

      - name: Run Tests
        run: |
          python manage.py validate_templates --settings config.settings.test --ignore-app allauth
          pytest
        env:
          DJANGO_FIELD_ENCRYPTION_KEY: ${{ secrets.DJANGO_FIELD_ENCRYPTION_KEY }}
          GITLAB_GROUP_ID: ${{ secrets.GITLAB_GROUP_ID }}
          GITLAB_GROUP_NAME: ${{ secrets.GITLAB_GROUP_NAME }}
          GITLAB_HOST_URL: ${{ secrets.GITLAB_HOST_URL }}
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
