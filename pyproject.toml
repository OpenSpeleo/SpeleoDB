# ==== UV Settings ==== #
[project]
name = "SpeleoDB_Repo"
version = "1.0.0"
authors = [{ name = "Jonathan Dekhtiar", email = "jonathan@dekhtiar.com" }]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    # Utils
    # ------------------------------------------------------------------------------
    "argon2-cffi==25.1.0",  # https://github.com/hynek/argon2-cffi
    "cachetools==6.2.0",    # https://github.com/tkem/cachetools
    "python-dotenv==1.1.1", # https://github.com/theskumar/python-dotenv
    "pytz==2025.2",         # https://github.com/stub42/pytz
    "timeago==1.0.16",      # https://github.com/hustcc/timeago
    "wrapt==1.17.3",        # https://github.com/GrahamDumpleton/wrapt

    # Redis
    # ------------------------------------------------------------------------------
    "django-redis==6.0.0", # https://github.com/jazzband/django-redis
    "hiredis==3.2.1",      # https://github.com/redis/hiredis-py
    "redis==6.4.0",        # https://github.com/redis/redis-py

    # Media Processing
    # ------------------------------------------------------------------------------
    "av==15.1.0",            # https://github.com/PyAV-Org/PyAV
    "imageio==2.37.0",       # https://github.com/imageio/imageio
    "imageio-ffmpeg==0.6.0", # https://github.com/imageio/imageio-ffmpeg
    "Pillow==11.3.0",        # https://github.com/python-pillow/Pillow
    "pillow-heif==1.1.0",    # https://github.com/bigcat88/pillow_heif
    "PyMuPDF==1.26.4",       # https://github.com/pymupdf/PyMuPDF

    # GeoJSON & GIS
    # ------------------------------------------------------------------------------
    "jsonschema-rs==0.33.0", # https://github.com/Stranger6667/jsonschema
    "orjson==3.11.3",        # https://github.com/ijl/orjson

    # Speleo Libraries
    # ------------------------------------------------------------------------------
    "mnemo-lib==0.0.3",      # https://github.com/OpenSpeleo/pytool_mnemo_lib
    "openspeleo-lib==0.0.5", # https://github.com/OpenSpeleo/pytool_openspeleo_lib

    # Git Management
    # ------------------------------------------------------------------------------
    "GitPython==3.1.45",    # https://github.com/gitpython-developers/GitPython
    "python-gitlab==6.3.0", # https://python-gitlab.readthedocs.io/en/stable/

    # Django
    # ------------------------------------------------------------------------------
    "Collectfasta==3.3.1",         # https://github.com/jasongi/collectfasta
    "django==5.2.5",               # https://www.djangoproject.com/
    "django-allauth==65.11.1",     # https://github.com/pennersr/django-allauth
    "django-countries==7.6.1",     # https://github.com/SmileyChris/django-countries/
    "django-dynamic-raw-id==4.4",  # https://github.com/lincolnloop/django-dynamic-raw-id
    "django-environ==0.12.0",      # https://github.com/joke2k/django-environ
    "django-hijack==3.7.4",        # https://github.com/django-hijack/django-hijack/
    "django-model-utils==5.0.0",   # https://github.com/jazzband/django-model-utils
    "django-storages[s3]==1.14.6", # https://github.com/jschneier/django-storages

    # Django REST Framework
    # ------------------------------------------------------------------------------
    "djangorestframework==3.16.1", # https://github.com/encode/django-rest-framework
    "django-cors-headers==4.7.0",  # https://github.com/adamchainz/django-cors-headers
    "drf-spectacular==0.28.0",     # https://github.com/tfranzel/drf-spectacular

    # AWS
    # ------------------------------------------------------------------------------
    "boto3==1.40.25",    # https://github.com/boto/boto3
    "botocore==1.40.22", # https://github.com/boto/botocore

    # Async Jobs & Workers
    # ------------------------------------------------------------------------------
    "celery==5.5.3",             # https://github.com/celery/celery
    "django-celery-beat==2.8.1", # https://github.com/celery/django-celery-beat
    "flower==2.0.1",             # https://github.com/mher/flower
    "watchfiles==1.1.0",         # https://github.com/samuelcolvin/watchfiles
]

[project.optional-dependencies]
local = [
    "Werkzeug[watchdog]==3.1.3", # https://github.com/pallets/werkzeug
    "ipdb==0.13.13",             # https://github.com/gotcha/ipdb
    "psycopg[binary]==3.2.9",    # https://github.com/psycopg/psycopg

    # Testing
    # ------------------------------------------------------------------------------
    "deepdiff>=7.0,<9.0",   # https://github.com/seperman/deepdiff
    "factory-boy==3.3.3",   # https://github.com/FactoryBoy/factory_boy
    "mypy==1.17.1",         # https://github.com/python/mypy
    "parameterized==0.9.0", # https://github.com/wolever/parameterized
    "pytest-sugar==1.1.1",  # https://github.com/Frozenball/pytest-sugar
    "pytest==8.4.1",        # https://github.com/pytest-dev/pytest

    # Typing
    # ------------------------------------------------------------------------------
    "djangorestframework-stubs[compatible-mypy]==3.16.2", # https://github.com/typeddjango/djangorestframework-stubs
    "django-stubs[compatible-mypy]==5.2.2",               # https://github.com/typeddjango/django-stubs
    "celery-types==0.23.0",                               # https://github.com/sbdchd/celery-types
    "types-cachetools==6.2.0.20250827",                   # https://github.com/python/typeshed
    "types-factory-boy==0.4.1",                           # https://github.com/youtux/types-factory-boy
    "types-pytz==2025.2.0.20250809",                      # https://github.com/python/typeshed

    # Django Testing
    # ------------------------------------------------------------------------------
    "django-coverage-plugin==3.1.1", # https://github.com/nedbat/django_coverage_plugin
    "pytest-django==4.11.1",         # https://github.com/pytest-dev/pytest-django

    # Code quality
    # ------------------------------------------------------------------------------
    "ruff==0.12.11",     # https://github.com/astral-sh/ruff
    "coverage==7.10.6",  # https://github.com/nedbat/coveragepy
    "djlint==1.36.4",    # https://github.com/Riverside-Healthcare/djLint
    "pre-commit==4.3.0", # https://github.com/pre-commit/pre-commit

    # Django
    # ------------------------------------------------------------------------------
    "django-debug-toolbar==6.0.0", # https://github.com/jazzband/django-debug-toolbar
    "django-extensions==4.1",      # https://github.com/django-extensions/django-extensions
    "django-schema-viewer==0.5.3", # https://github.com/pikhovkin/django-schema-viewer
    "django-silk==5.4.2",          # https://github.com/jazzband/django-silk
]

production = [
    "gunicorn==23.0.0", # https://github.com/benoitc/gunicorn
    # "granian==2.5.2",  # https://github.com/emmett-framework/granian
    "psycopg[c]==3.2.9", # https://github.com/psycopg/psycopg

    # Django
    # ------------------------------------------------------------------------------
    "django-anymail[mailersend]==13.0.1", # https://github.com/anymail/django-anymail
]

# Django
# ------------------------------------------------------------------------------
# ==== pytest ====
[tool.pytest.ini_options]
norecursedirs = ".uv/*"
minversion = "6.0"
# addopts = "--ds=config.settings.test --import-mode=importlib"
addopts = "--ds=config.settings.test --reuse-db --import-mode=importlib"
# addopts = "--ds=config.settings.test -vvv --capture=no --reuse-db --import-mode=importlib"
python_files = ["tests.py", "test_*.py"]
filterwarnings = [
    "ignore:datetime.datetime.utcnow.*:DeprecationWarning",
    "ignore:.*builtin type SwigPyPacked has no __module__ attribute:DeprecationWarning",
    "ignore:.*builtin type SwigPyObject has no __module__ attribute:DeprecationWarning",
    "ignore:.*builtin type swigvarlink has no __module__ attribute:DeprecationWarning",
    "ignore:.*FORMS_URLFIELD_ASSUME_HTTPS.*:django.utils.deprecation.RemovedInDjango60Warning",
    "ignore::django.utils.deprecation.RemovedInDjango60Warning",
    "ignore:.*FORMS_URLFIELD_ASSUME_HTTPS.*:django.utils.deprecation.RemovedInDjango60Warning",
]

# ==== Coverage ====
[tool.coverage.run]
include = ["speleodb/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]

# ==== mypy ====
[tool.mypy]
exclude = [
    "**/*.pyc",
    "**/node_modules",
    "**/__pycache__",
    ".devcontainer",
    ".envs",
    ".git",
    ".github",
    ".ipython",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".uv",
    ".venv",
    ".vscode",
    ".workdir",
    "~/.cache",
    "bin",
    "docs",
    "fixtures",
    "mediafiles",
    "staticfiles",
]
check_untyped_defs = true
# ignore_missing_imports = true
disable_error_code = "method-assign"
follow_untyped_imports = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]
python_version = "3.13"
scripts_are_modules = true
strict = true
cache_fine_grained = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.mypy-speleodb.api.v1.tests]
disallow_untyped_calls = false
allow_untyped_calls = true

[[tool.mypy.overrides]]
# Django settings use libraries that don't provide stubs (django-environ)
disable_error_code = "no-untyped-call"

module = "config.settings.*"
[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.tests.*"
# Check for untyped calls
disallow_untyped_calls = false
# Check for untyped decorator functions
disallow_untyped_decorators = false

[tool.django-stubs]
django_settings_module = "config.settings.test"

# ==== djLint ====
[tool.djlint]
blank_line_after_tag = "load,extends"
close_void_tags = true
format_css = true
format_js = true
# TODO: remove T002 when fixed https://github.com/djlint/djLint/issues/687
ignore = "H006,H030,H031,T002"
include = "H017,H035"
indent = 2
max_line_length = 119
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*/migrations/*.py",
    "staticfiles/*",
    "main.py",
]
# Same as Django: https://github.com/cookiecutter/cookiecutter-django/issues/4792.
line-length = 88
indent-width = 4
target-version = "py313"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "C90",
    "I",
    "N",
    "UP",
    "YTT",
    # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
    "ASYNC",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "DJ",
    "EM",
    "EXE",
    "FA",
    "ICN",
    "G",
    'INP',
    'PIE',
    "T20",
    'PYI',
    'PT',
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    # "ARG", # Unused function argument
    "PTH",
    "ERA",
    "PD",
    "PGH",
    "PL",
    "TRY",
    "FLY",
    # "NPY",
    # "AIR",
    "PERF",
    # "FURB",
    # "LOG",
    "RUF",
]
ignore = [
    "S101",   # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
    "SIM102", # sometimes it's better to nest
    "UP038",  # Checks for uses of isinstance/issubclass that take a tuple
    # of types for comparison.
    # Deactivated because it can make the code slow:
    # https://github.com/astral-sh/ruff/issues/7871
    "EM101",  # Checks for the use of string literals in exception constructors.
    "EM102",  # Checks for the use of f-strings in exception constructors.
    "TRY003", # Checks for long exception messages that are not defined in the
    # exception class itself.
    "COM812", # Checks for the absence of trailing commas.
    "UP009",  # Checks for unnecessary UTF-8 encoding declarations.
    "EXE001", # Checks for a shebang directive in a file that is not executable.
    "FBT002", # Checks for the use of boolean positional arguments in function
    # definitions, as determined by the presence of a boolean default value.
    "PLR0913", # Checks for function definitions that include too many arguments.
    "S311",    # Checks for uses of cryptographically weak pseudo-random number generators.
    "ERA001",  # Checks for commented-out Python code.
    "C901",    # Checks for functions with a high McCabe complexity.
    "PLR0911", # Functions or methods with many return statements are harder to understand
    # and maintain, and often indicative of complex logic.
    "PLR0912", # Functions or methods with many branches are harder to understand and
    # maintain than functions or methods with fewer branches.
    "G004",   # Checks for uses of f-strings to format logging messages.
    "TRY300", # Checks for return statements in try blocks.
    "FBT001", # Checks for the use of boolean positional arguments in function definitions,
    # as determined by the presence of a bool type hint.
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# The fixes in extend-unsafe-fixes will require
# provide the `--unsafe-fixes` flag when fixing.
extend-unsafe-fixes = ["UP038"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = true

[tool.pyright]
# ignore = ["*"]
# typeCheckingMode = "off"
exclude = [
    "**/*.pyc",
    "**/node_modules",
    "**/__pycache__",
    ".devcontainer",
    ".envs",
    ".git",
    ".github",
    ".ipython",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".uv",
    ".venv",
    ".vscode",
    ".workdir",
    "bin",
    "docs",
    "fixtures",
    "mediafiles",
]
pythonVersion = '3.13'
reportUnknownMemberType = "none"
reportIncompatibleMethodOverride = "none"
reportIncompatibleVariableOverride = "none"
reportUnknownVariableType = "none"
