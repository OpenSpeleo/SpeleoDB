exclude: "^docs/|/migrations/|devcontainer.json|.*.html|.*.css|.*.js|.*.svg|.*.dist"

default_language_version:
  python: python3.13

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        exclude: ^speleodb/api/v1/tests/artifacts/
      - id: end-of-file-fixer
        exclude: ^speleodb/api/v1/tests/artifacts/
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-yaml
      - id: debug-statements
      - id: check-builtin-literals
      - id: check-case-conflict
      - id: check-docstring-first
      - id: detect-private-key

  - repo: https://github.com/adamchainz/django-upgrade
    rev: "1.25.0"
    hooks:
      - id: django-upgrade
        args: ["--target-version", "5.1"]

  # Run the Ruff linter.
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.1
    hooks:
      # Linter
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
        exclude: ^speleodb/api/v1/tests/artifacts/
      # Formatter
      - id: ruff-format
        exclude: ^speleodb/api/v1/tests/artifacts/

  - repo: https://github.com/astral-sh/uv-pre-commit
    # uv version.
    rev: 0.7.18
    hooks:
      - id: uv-lock
        args: ["--upgrade"]

  - repo: https://github.com/pycqa/bandit
    rev: 1.8.5
    hooks:
      - id: bandit
        args: ["-iii", "-ll"]

  - repo: https://github.com/Riverside-Healthcare/djLint
    rev: v1.36.4
    hooks:
      - id: djlint-reformat-django
      - id: djlint-django

  - repo: local
    hooks:
      - id: check-django-migrations
        name: Check django migrations
        # Check for absent migrations
        entry: python3 manage.py makemigrations --check --dry-run
        language: system
        types: [python] # hook only runs if a python file is staged
        pass_filenames: false

  - repo: https://github.com/thoughtworks/talisman
    rev: "v1.37.0" # Update me!
    hooks:
      # both pre-commit and pre-push supported
      # -   id: talisman-push
      - id: talisman-commit

  # Use a Local Workflow to ensure that `mypy` picks up all the local up-to-date dependencies
  - repo: local
    hooks:
      - args: ["run", "--", "--config-file", "pyproject.toml"]
        description: Static type checker for Python
        # https://github.com/pre-commit/mirrors-mypy/blob/main/.pre-commit-hooks.yaml
        entry: dmypy
        id: mypy
        language: system
        name: mypy
        require_serial: true
        types_or: [python, pyi]

  - repo: https://github.com/PyCQA/autoflake
    rev: v2.3.1 # check for the latest version
    hooks:
      - id: autoflake
        args:
          [
            "--in-place",
            "--remove-all-unused-imports",
            "--remove-unused-variables",
            "--expand-star-imports",
          ]
        additional_dependencies: ["autoflake"]

# sets up .pre-commit-ci.yaml to ensure pre-commit dependencies stay up to date
ci:
  autoupdate_schedule: weekly
  skip: []
  submodules: false
