# Generated by Django 5.2.7 on 2025-10-18 03:42

from django.db import migrations, models


def copy_user_email(apps, schema_editor):
    Project = apps.get_model('surveys', 'Project')
    Station = apps.get_model('surveys', 'Station')
    StationResource = apps.get_model('surveys', 'StationResource')
    User = apps.get_model('users', 'User')

    for model in [Project, Station, StationResource]:
        for obj in model.objects.all():
            # Check if FK exists
            if getattr(obj, "created_by_id", None) is None:
                raise ValueError(
                    f"Cannot migrate {model.__name__} id={obj.pk}: created_by FK is null"
                )

            # Check if the referenced User exists
            user = User.objects.filter(pk=obj.created_by_id).first()
            if not user:
                raise ValueError(
                    f"Cannot migrate {model.__name__} id={obj.pk}: User with id={obj.created_by_id} does not exist"
                )

            # Copy email
            obj.created_by_email = user.email
            obj.save(update_fields=['created_by_email'])


def copy_user_email_reverse(apps, schema_editor):
    Project = apps.get_model('surveys', 'Project')
    Station = apps.get_model('surveys', 'Station')
    StationResource = apps.get_model('surveys', 'StationResource')
    User = apps.get_model('users', 'User')

    for model in [Project, Station, StationResource]:
        for obj in model.objects.all():
            if obj.created_by:  # this is now the email string
                user = User.objects.filter(email=obj.created_by).first()
                if user:
                    obj.created_by_id = user.id
                    obj.save(update_fields=['created_by_id'])


class Migration(migrations.Migration):

    dependencies = [
        ('surveys', '0008_alter_stationresource_file_and_more'),
    ]

    operations = [
        # 1. Add temporary field to hold emails (nullable at first)
        migrations.AddField(
            model_name='project',
            name='created_by_email',
            field=models.EmailField(
                help_text='User who created or submitted the entry.',
                max_length=254,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name='station',
            name='created_by_email',
            field=models.EmailField(
                help_text='User who created or submitted the entry.',
                max_length=254,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name='stationresource',
            name='created_by_email',
            field=models.EmailField(
                help_text='User who created or submitted the entry.',
                max_length=254,
                null=True,
            ),
        ),

        # 2. Copy data from FK to email
        migrations.RunPython(
            copy_user_email,
            reverse_code=copy_user_email_reverse
        ),

        # 3. Ensure no NULLs remain before removing FK
        migrations.AlterField(
            model_name='project',
            name='created_by_email',
            field=models.EmailField(
                help_text='User who created or submitted the entry.',
                max_length=254,
                null=False,
            ),
        ),
        migrations.AlterField(
            model_name='station',
            name='created_by_email',
            field=models.EmailField(
                help_text='User who created or submitted the entry.',
                max_length=254,
                null=False,
            ),
        ),
        migrations.AlterField(
            model_name='stationresource',
            name='created_by_email',
            field=models.EmailField(
                help_text='User who created or submitted the entry.',
                max_length=254,
                null=False,
            ),
        ),

        # 4. Remove old FK field
        migrations.RemoveField(
            model_name='project',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='station',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='stationresource',
            name='created_by',
        ),

        # 5. Rename new email field to original name
        migrations.RenameField(
            model_name='project',
            old_name='created_by_email',
            new_name='created_by',
        ),
        migrations.RenameField(
            model_name='station',
            old_name='created_by_email',
            new_name='created_by',
        ),
        migrations.RenameField(
            model_name='stationresource',
            old_name='created_by_email',
            new_name='created_by',
        ),
    ]
