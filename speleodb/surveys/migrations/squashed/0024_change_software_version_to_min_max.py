# Generated by Django 5.2.3 on 2025-06-25 04:27

import django.core.validators
import speleodb.surveys.fields
from django.db import migrations


def migrate_software_version_to_min_max(apps, schema_editor):
    """Copy software_version to min_software_version for existing records."""
    PluginRelease = apps.get_model('surveys', 'PluginRelease')
    for release in PluginRelease.objects.all():
        if release.software_version:
            release.min_software_version = release.software_version
            release.max_software_version = ""
            release.save()


def reverse_migrate_software_version(apps, schema_editor):
    """Reverse migration: copy min_software_version back to software_version."""
    PluginRelease = apps.get_model('surveys', 'PluginRelease')
    for release in PluginRelease.objects.all():
        if release.min_software_version:
            release.software_version = release.min_software_version
            release.save()


class Migration(migrations.Migration):

    dependencies = [
        ('surveys', '0023_pluginrelease'),
    ]

    operations = [
        migrations.AddField(
            model_name='pluginrelease',
            name='max_software_version',
            field=speleodb.surveys.fields.VersionField(blank=True, default='', max_length=50, validators=[django.core.validators.RegexValidator(message='Enter a valid SemVer (e.g., 1.2.3) or CalVer (e.g., 2025.06.23)', regex='(^(?P<major>0|[1-9]\\d*)\\.(?P<minor>0|[1-9]\\d*)\\.(?P<patch>0|[1-9]\\d*)$)|(^(?P<year>2[0-9]{3})\\.(?P<month>1[0-2]|0?[1-9])(\\.(?P<day>3[0-1]|[1-2][0-9]|0?[1-9]))?$)')], verbose_name='Maximum software version'),
        ),
        migrations.AddField(
            model_name='pluginrelease',
            name='min_software_version',
            field=speleodb.surveys.fields.VersionField(blank=True, default='', max_length=50, validators=[django.core.validators.RegexValidator(message='Enter a valid SemVer (e.g., 1.2.3) or CalVer (e.g., 2025.06.23)', regex='(^(?P<major>0|[1-9]\\d*)\\.(?P<minor>0|[1-9]\\d*)\\.(?P<patch>0|[1-9]\\d*)$)|(^(?P<year>2[0-9]{3})\\.(?P<month>1[0-2]|0?[1-9])(\\.(?P<day>3[0-1]|[1-2][0-9]|0?[1-9]))?$)')], verbose_name='Minimum software version'),
        ),
        migrations.RunPython(
            migrate_software_version_to_min_max,
            reverse_migrate_software_version,
        ),
        migrations.RemoveField(
            model_name='pluginrelease',
            name='software_version',
        ),
    ]
